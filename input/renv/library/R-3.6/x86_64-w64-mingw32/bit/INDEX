.BITS                   Initializing bit masks
CoercionToStandard      Coercion from bit, bitwhich, which and ri to
                        logical, integer, double
Extract                 Extract or replace part of an boolean vector
Metadata                Generics related to cache access
Sorting                 Generics for in-RAM sorting and ordering
Summaries               Summaries of boolean vectors
as.bit.NULL             Coercing to bit
as.bitwhich.NULL        Coercing to bitwhich
as.booltype.default     Coerce to booltype (generic)
as.character.bit        Coerce bit to character
as.character.bitwhich   Coerce bitwhich to character
as.ri.ri                Coerce to ri
as.which.which          Coercion to (positive) integer positions
bbatch                  Balanced Batch sizes
bit                     Create empty bit vector
bit-package             bit: Classes and methods for fast
                        memory-efficient boolean selections
bit_in                  bit %in%
bit_rangediff           bit range difference
bit_setops              bit set operations
bit_sort                bit sort
bit_sort_unique         bit sort unique
bit_unidup              bit unique and duplicated
bitsort                 Low-level sorting: bit sort
bitwhich                Create bitwhich vector (skewed boolean)
bitwhich_representation
                        Diagnose representation of bitwhich
booltype                Diagnosing boolean types
booltypes               Boolean types
c.booltype              Concatenating booltype vectors
chunk                   Methods for chunked range index
chunks                  Function for chunked range index
clone                   Cloning ff and ram objects
copy_vector             Copy atomic R vector
countsort               Low-level sorting: counting sort
firstNA                 Position of first NA
get_length              Get C length of a vector
getsetattr              Attribute setting by reference
in.bitwhich             Check existence of integers in table
intrle                  Hybrid Index, C-coded utilities
is.booltype             Testing for boolean types
is.na.bit               Test for NA in bit and bitwhich
length.bit              Getting and setting length of bit, bitwhich and
                        ri objects
maxindex.default        Get maxindex (length of boolean vector) and
                        poslength (number of 'selected' elements)
merge_rev               Fast functions for sorted sets of integer
physical.default        Physical and virtual attributes
print.bit               Print method for bit
print.bitwhich          Print method for bitwhich
quicksort2              Low-level sorting: binary quicksort
quicksort3              Low-level sorting: threeway quicksort
range_na                Get range and number of NAs
range_nanozero          Remove zeros and get range and number of NAs
range_sortna            Prepare for sorting and get range, number of
                        NAs and unsortedness
rep.booltype            Replicating bit and bitwhich vectors
repeat.time             Adaptive timer
repfromto               Virtual recycling
rev.booltype            Reversing bit and bitwhich vectors
reverse_vector          Reverse atomic vector
ri                      Range index
rlepack                 Hybrid Index, rle-pack utilities
still.identical         Test for C-level identity of two atomic vectors
str.bit                 Str method for bit
str.bitwhich            Str method for bitwhich
symdiff                 Symmetric set complement
unattr                  Attribute removal
vecseq                  Vectorized Sequences
xor.default             Boolean operators and functions
